<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Coq" version="8.13.2" timelimit="0" steplimit="0" memlimit="0"/>
<file format="whyml" proved="true">
<path name=".."/><path name="Knuth.mlw"/>
<theory name="Knuth" proved="true">
 <goal name="prime&#39;vc" expl="VC for prime" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="prime&#39;vc.0" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="prime&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="prime&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="prime&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="prime&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="prime&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="prime&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="prime&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="89"/></proof>
  </goal>
  <goal name="prime&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="prime&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="33"/></proof>
  </goal>
  <goal name="prime&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="41"/></proof>
  </goal>
  <goal name="prime&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="41"/></proof>
  </goal>
  <goal name="prime&#39;vc.12" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="47"/></proof>
  </goal>
  <goal name="prime&#39;vc.13" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="49"/></proof>
  </goal>
  <goal name="prime&#39;vc.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="119"/></proof>
  </goal>
  <goal name="prime&#39;vc.15" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="99"/></proof>
  </goal>
  <goal name="prime&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="133"/></proof>
  </goal>
  <goal name="prime&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="55"/></proof>
  </goal>
  <goal name="prime&#39;vc.18" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="55"/></proof>
  </goal>
  <goal name="prime&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="154"/></proof>
  </goal>
  <goal name="prime&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="prime&#39;vc.20.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="55"/></proof>
   </goal>
   <goal name="prime&#39;vc.20.1" expl="loop invariant preservation" proved="true">
   <transf name="assert" proved="true" arg1="(a [j1] * s &lt;= s * s)">
    <goal name="prime&#39;vc.20.1.0" expl="asserted formula" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="57"/></proof>
    </goal>
    <goal name="prime&#39;vc.20.1.1" expl="loop invariant preservation" proved="true">
    <transf name="assert" proved="true" arg1="(a[j1] * a[j1] &lt;= s * a[j1])">
     <goal name="prime&#39;vc.20.1.1.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.06" steps="146"/></proof>
     </goal>
     <goal name="prime&#39;vc.20.1.1.1" expl="loop invariant preservation" proved="true">
     <proof prover="0"><result status="valid" time="0.03" steps="61"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="prime&#39;vc.21" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="49"/></proof>
  </goal>
  <goal name="prime&#39;vc.22" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="59"/></proof>
  </goal>
  <goal name="prime&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="111"/></proof>
  </goal>
  <goal name="prime&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="63"/></proof>
  </goal>
  <goal name="prime&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="67"/></proof>
  </goal>
  <goal name="prime&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="175"/></proof>
  </goal>
  <goal name="prime&#39;vc.27" expl="loop invariant preservation" proved="true">
  <transf name="assert" proved="true" arg1="(k &lt; i1 \/ k = i1)">
   <goal name="prime&#39;vc.27.0" expl="asserted formula" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="71"/></proof>
   </goal>
   <goal name="prime&#39;vc.27.1" expl="loop invariant preservation" proved="true">
   <transf name="destruct" proved="true" arg1="h">
    <goal name="prime&#39;vc.27.1.0" expl="loop invariant preservation" proved="true">
    <transf name="assert" proved="true" arg1="(a[k] = a1[k])">
     <goal name="prime&#39;vc.27.1.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.03" steps="174"/></proof>
     </goal>
     <goal name="prime&#39;vc.27.1.0.1" expl="loop invariant preservation" proved="true">
     <proof prover="0"><result status="valid" time="0.03" steps="77"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="prime&#39;vc.27.1.1" expl="loop invariant preservation" proved="true">
    <transf name="apply" proved="true" arg1="small_divisors">
     <goal name="prime&#39;vc.27.1.1.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.01" steps="73"/></proof>
     </goal>
     <goal name="prime&#39;vc.27.1.1.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="prime&#39;vc.27.1.1.1.0" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(in_array d a1 0 (i - 1))" arg2="as" arg3="Hi">
       <goal name="prime&#39;vc.27.1.1.1.0.0" expl="asserted formula" proved="true">
       <proof prover="0"><result status="valid" time="1.94" steps="629"/></proof>
       </goal>
       <goal name="prime&#39;vc.27.1.1.1.0.1" expl="apply premises" proved="true">
       <transf name="unfold" proved="true" arg1="in_array" arg2="in" arg3="Hi">
        <goal name="prime&#39;vc.27.1.1.1.0.1.0" expl="apply premises" proved="true">
        <transf name="destruct" proved="true" arg1="Hi">
         <goal name="prime&#39;vc.27.1.1.1.0.1.0.0" expl="apply premises" proved="true">
         <transf name="assert" proved="true" arg1="(x &lt; j)">
          <goal name="prime&#39;vc.27.1.1.1.0.1.0.0.0" expl="asserted formula" proved="true">
          <transf name="assert" proved="true" arg1="(forall x y : int. 0 &lt;= x -&gt; 0 &lt;= y -&gt; x &lt;= y -&gt; x * x &lt;= y * y)
">
           <goal name="prime&#39;vc.27.1.1.1.0.1.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="prime&#39;vc.27.1.1.1.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
            <transf name="assert" proved="true" arg1="(x * x &lt;= x * y /\ y * x &lt;= y * y)">
             <goal name="prime&#39;vc.27.1.1.1.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
             <proof prover="0"><result status="valid" time="0.04" steps="172"/></proof>
             </goal>
             <goal name="prime&#39;vc.27.1.1.1.0.1.0.0.0.0.0.1" expl="asserted formula" proved="true">
             <proof prover="0"><result status="valid" time="0.02" steps="96"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="prime&#39;vc.27.1.1.1.0.1.0.0.0.1" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="0.07" steps="236"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="prime&#39;vc.27.1.1.1.0.1.0.0.1" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.03" steps="90"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="prime&#39;vc.28" expl="loop invariant preservation" proved="true">
  <transf name="assert" proved="true" arg1="(j &lt; i1 \/ j = i1)" arg2="as" arg3="h">
   <goal name="prime&#39;vc.28.0" expl="asserted formula" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="73"/></proof>
   </goal>
   <goal name="prime&#39;vc.28.1" expl="loop invariant preservation" proved="true">
   <transf name="destruct_rec" proved="true" arg1="h">
    <goal name="prime&#39;vc.28.1.0" expl="loop invariant preservation" proved="true">
    <transf name="assert" proved="true" arg1="(a1[k] &lt; a1[j])">
     <goal name="prime&#39;vc.28.1.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.03" steps="77"/></proof>
     </goal>
     <goal name="prime&#39;vc.28.1.0.1" expl="loop invariant preservation" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="188"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="prime&#39;vc.28.1.1" expl="loop invariant preservation" proved="true">
    <transf name="assert" proved="true" arg1="(a1[k] &lt; m1)">
     <goal name="prime&#39;vc.28.1.1.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="185"/></proof>
     </goal>
     <goal name="prime&#39;vc.28.1.1.1" expl="loop invariant preservation" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="186"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="prime&#39;vc.29" expl="loop invariant preservation" proved="true">
  <transf name="assert" proved="true" arg1="(k = m1 \/ k &lt;= a1[i1 - 1])">
   <goal name="prime&#39;vc.29.0" expl="asserted formula" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="77"/></proof>
   </goal>
   <goal name="prime&#39;vc.29.1" expl="loop invariant preservation" proved="true">
   <transf name="destruct" proved="true" arg1="h">
    <goal name="prime&#39;vc.29.1.0" expl="loop invariant preservation" proved="true">
    <proof prover="0"><result status="valid" time="0.07" steps="188"/></proof>
    </goal>
    <goal name="prime&#39;vc.29.1.1" expl="loop invariant preservation" proved="true">
    <transf name="assert" proved="true" arg1="(in_array k a1 0 i1)">
     <goal name="prime&#39;vc.29.1.1.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.02" steps="77"/></proof>
     </goal>
     <goal name="prime&#39;vc.29.1.1.1" expl="loop invariant preservation" proved="true">
     <transf name="unfold" proved="true" arg1="in_array" arg2="in" arg3="h">
      <goal name="prime&#39;vc.29.1.1.1.0" expl="loop invariant preservation" proved="true">
      <transf name="destruct_rec" proved="true" arg1="h">
       <goal name="prime&#39;vc.29.1.1.1.0.0" expl="loop invariant preservation" proved="true">
       <transf name="unfold" proved="true" arg1="in_array">
        <goal name="prime&#39;vc.29.1.1.1.0.0.0" expl="VC for prime" proved="true">
        <transf name="exists" proved="true" arg1="x">
         <goal name="prime&#39;vc.29.1.1.1.0.0.0.0" proved="true">
         <proof prover="0"><result status="valid" time="0.03" steps="199"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="prime&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="67"/></proof>
  </goal>
  <goal name="prime&#39;vc.31" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="49"/></proof>
  </goal>
  <goal name="prime&#39;vc.32" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prime&#39;vc.32.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="49"/></proof>
   </goal>
   <goal name="prime&#39;vc.32.1" expl="loop invariant preservation" proved="true">
   <transf name="assert" proved="true" arg1="(exists x. prime x /\ a[i - 1] &lt; x &lt; 2 * a[i - 1])">
    <goal name="prime&#39;vc.32.1.0" expl="asserted formula" proved="true">
    <transf name="assert" proved="true" arg1="(2 &lt;= a[i - 1])">
     <goal name="prime&#39;vc.32.1.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.01" steps="49"/></proof>
     </goal>
     <goal name="prime&#39;vc.32.1.0.1" expl="asserted formula" proved="true">
     <proof prover="1"><path name="Knuth_Knuth_h_5.v"/><result status="valid" time="0.99"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="prime&#39;vc.32.1.1" expl="loop invariant preservation" proved="true">
    <transf name="destruct_rec" proved="true" arg1="h">
     <goal name="prime&#39;vc.32.1.1.0" expl="loop invariant preservation" proved="true">
     <proof prover="0"><result status="timeout" time="5.00"/></proof>
     <transf name="assert" proved="true" arg1="(m1 &lt;= x)">
      <goal name="prime&#39;vc.32.1.1.0.0" expl="asserted formula" proved="true">
      <proof prover="0"><result status="valid" time="0.01" steps="57"/></proof>
      </goal>
      <goal name="prime&#39;vc.32.1.1.0.1" expl="loop invariant preservation" proved="true">
      <transf name="assert" proved="true" arg1="(odd x)">
       <goal name="prime&#39;vc.32.1.1.0.1.0" expl="asserted formula" proved="true">
       <proof prover="0"><result status="valid" time="0.01" steps="59"/></proof>
       </goal>
       <goal name="prime&#39;vc.32.1.1.0.1.1" expl="loop invariant preservation" proved="true">
       <transf name="assert" proved="true" arg1="(m1 &lt; x \/ x = m1 \/ m1 &lt; x)">
        <goal name="prime&#39;vc.32.1.1.0.1.1.0" expl="asserted formula" proved="true">
        <proof prover="0"><result status="valid" time="0.01" steps="59"/></proof>
        </goal>
        <goal name="prime&#39;vc.32.1.1.0.1.1.1" expl="loop invariant preservation" proved="true">
        <transf name="destruct_rec" proved="true" arg1="h">
         <goal name="prime&#39;vc.32.1.1.0.1.1.1.0" expl="loop invariant preservation" proved="true">
         <proof prover="0"><result status="valid" time="0.03" steps="63"/></proof>
         </goal>
         <goal name="prime&#39;vc.32.1.1.0.1.1.1.1" expl="loop invariant preservation" proved="true">
         <proof prover="0"><result status="timeout" time="5.00"/></proof>
         <transf name="assert" proved="true" arg1="(divides a[j] m1)">
          <goal name="prime&#39;vc.32.1.1.0.1.1.1.1.0" expl="asserted formula" proved="true">
          <proof prover="0"><result status="valid" time="0.01" steps="61"/></proof>
          </goal>
          <goal name="prime&#39;vc.32.1.1.0.1.1.1.1.1" expl="loop invariant preservation" proved="true">
          <transf name="assert" proved="true" arg1="(prime a[j])">
           <goal name="prime&#39;vc.32.1.1.0.1.1.1.1.1.0" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="0.02" steps="63"/></proof>
           </goal>
           <goal name="prime&#39;vc.32.1.1.0.1.1.1.1.1.1" expl="loop invariant preservation" proved="true">
           <transf name="assert" proved="true" arg1="(a[j] &lt; m1)">
            <goal name="prime&#39;vc.32.1.1.0.1.1.1.1.1.1.0" expl="asserted formula" proved="true">
            <proof prover="0"><result status="valid" time="0.03" steps="168"/></proof>
            </goal>
            <goal name="prime&#39;vc.32.1.1.0.1.1.1.1.1.1.1" expl="loop invariant preservation" proved="true">
            <proof prover="0"><result status="valid" time="0.09" steps="180"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="prime&#39;vc.32.1.1.0.1.1.1.2" expl="loop invariant preservation" proved="true">
         <proof prover="0"><result status="valid" time="0.03" steps="63"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="prime&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="52"/></proof>
  </goal>
  <goal name="prime&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="54"/></proof>
  </goal>
  <goal name="prime&#39;vc.35" expl="loop invariant preservation" proved="true">
  <transf name="assert" proved="true" arg1="(k &lt; m1 \/ k = m1 \/ k = m1 + 1)" arg2="as" arg3="h">
   <goal name="prime&#39;vc.35.0" expl="asserted formula" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="58"/></proof>
   </goal>
   <goal name="prime&#39;vc.35.1" expl="loop invariant preservation" proved="true">
   <transf name="destruct_rec" proved="true" arg1="h">
    <goal name="prime&#39;vc.35.1.0" expl="loop invariant preservation" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="62"/></proof>
    </goal>
    <goal name="prime&#39;vc.35.1.1" expl="loop invariant preservation" proved="true">
    <transf name="assert" proved="true" arg1="(divides a[j] m1 /\ 1 &lt; a[j] &lt;= a[i - 1])">
     <goal name="prime&#39;vc.35.1.1.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.10" steps="190"/></proof>
     </goal>
     <goal name="prime&#39;vc.35.1.1.1" expl="loop invariant preservation" proved="true">
     <proof prover="0"><result status="valid" time="0.12" steps="169"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="prime&#39;vc.35.1.2" expl="loop invariant preservation" proved="true">
    <proof prover="0"><result status="valid" time="0.04" steps="170"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="prime&#39;vc.36" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="60"/></proof>
  </goal>
  <goal name="prime&#39;vc.37" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="62"/></proof>
  </goal>
  <goal name="prime&#39;vc.38" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="62"/></proof>
  </goal>
  <goal name="prime&#39;vc.39" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="54"/></proof>
  </goal>
  <goal name="prime&#39;vc.40" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="37"/></proof>
  </goal>
  <goal name="prime&#39;vc.41" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="39"/></proof>
  </goal>
  <goal name="prime&#39;vc.42" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="39"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
